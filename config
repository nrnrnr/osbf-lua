# Version
LIB_VERSION= 2.0.4

# Installation directories: Adjust these for your distro and Lua version
# Where Lua modules are installed
LUAMODULE_DIR=/usr/local/lib/lua/5.1
PKG_CONFIG=$(firstword $(shell which pkg-config))
ifeq (pkg-config,$(findstring pkg-config,$(PKG_CONFIG)))
  LUA_CFLAGS=$(shell pkg-config --cflags lua5.1)
else
  LUA_CFLAGS=-I /usr/local/include -I/usr/local/include/lua
endif
PGDIR=/usr
LUA_LIBS=
LUABIN=$(shell which lua5.1)
ifeq (,$(findstring lua5.1,$(firstword $(LUABIN))))
 LUABIN=$(shell which lua)
endif
ifeq (,$(findstring lua,$(firstword $(LUABIN))))
 $(error lua executable not found.)
endif
LUA_VERSION=$(word 2, $(shell $(LUABIN) -v 2>&1))
# Rethink when Lua 5.2 is out
ifeq (,$(findstring 5.1,$(LUA_VERSION)))
 $(error Lua 5.1 or greater required)
endif
# Where to install the osbf binary
BINDIR=/usr/local/bin
# OS dependent
LIB_EXT= .so

# if this "autoconf" doesn't work for you, set LIB_OPTION for shared
# object manually.
LD=$(shell ld -V -o /dev/null 2>&1)
ifneq (,$(findstring Solaris,$(LD)))
 # Solaris - tested with 2.6, gcc 2.95.3 20010315 and Solaris ld
 LIB_OPTION= -G -dy
else
 ifneq (,$(findstring GNU,$(LD)))
  # GNU ld
  LIB_OPTION= -shared -dy
 else
  $(error couldn't identify your ld. Please set the shared option manually)
 endif
endif

# Choose the PIC option
# safest, works on most systems
PIC=-fPIC
# probably faster, but may not work on your system
#PIC=-fpic

# Compilation directives
OPTIONS=-Wall ${PIC} -fomit-frame-pointer -pedantic-errors -W -Waggregate-return -Wcast-align -Wmissing-prototypes -Wnested-externs -Wshadow -Wwrite-strings -Wswitch
# OPTIONS += -O3
OPTIONS += -g
CFLAGS= $(OPTIONS) $(LUA_CFLAGS) -DLIB_VERSION=\"$(LIB_VERSION)\"
LIBS= $(LUA_LIBS) -lm
CC= gcc

CFLAGS += -DDMALLOC
LIBS += -ldmalloc
