#!/usr/bin/env lua5.1
-- -*- mode: lua -*-

-- self-contained script to train on corpora that are in directories labelled by class



function table.randomized(l)
  u = { }
  local n = #l
  for i = 1, n do
    u[i] = l[i]
  end
  for i = 1, n do
    j = math.random(n)
    u[i], u[j] = u[j], u[i]
  end
  return u
end

----------------------------------------------------------------

local pname = 'osbf3'

local function submod(x) return require (pname .. '.' .. x) end

local osbf = require (pname)
local util = submod 'util'
local commands = submod 'commands'
local msg = submod 'msg'

util.progname = arg[0] or 'dir-train'

osbf.options.register { long = 'trace', usage = ' # stack trace on error',
                   help = [[
  --trace
      Don't recover from errors; give a stack trace instead
]] }

local ok, options, args = pcall(osbf.options.parse, arg)
if not ok then
  util.die(options, '\n')
end
if options.trace then
  pcall = function(f, ...) return true, f(...) end
end
osbf.init(options)

args = table.randomized(args)
for _, file in ipairs(args) do
  local class = string.match(file, '([^/]+)/[^/]+$')
  assert(class, 'could not find class in filename ' .. file)
  local ok, comment = pcall(commands.learn_msg, msg.of_file(file), class, true)
  if ok then
    io.stdout:write(file, ': ', comment, '\n')
  else
    io.stderr:write(file, ': ', comment, '\n')
  end
end
