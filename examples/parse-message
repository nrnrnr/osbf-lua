#! /usr/bin/lua
-- -*- mode: lua -*-

-- self-contained script to check message parsing

local pname = 'osbf3'

local function submod(x) return require (pname .. '.' .. x) end

local osbf = require (pname)
local util = submod 'util'
local commands = submod 'commands'
local msg = submod 'msg'
local log = submod 'log'
local core = submod 'core'

osbf.options.register { long = 'trace', usage = ' # stack trace on error',
                   help = [[
  --trace
      Don't recover from errors; give a stack trace instead
]] }

osbf.options.register { long = 'old', usage = ' # use old parser' }
osbf.options.register { long = 'new', usage = ' # use new parser' }



local ok, opts, args = pcall(osbf.options.parse, arg)
if not ok then
  util.die(opts, '\n')
end
if opts.trace then
  pcall = function(f, ...) return true, f(...) end
end

osbf.init(opts)

if opts.old and opts.new or not (opts.old or opts.new) then
  util.die('Make up your mind!\n')
end

local parser = opts.old and msg.of_string or msg.of_string_fast

local n = 0
for file in io.lines() do
  local ok, msg = pcall(parser, file)
  if not ok then
    print(file, msg)
  else
    n = n + 1
  end
end
io.write('parsed ', n, ' messages\n')

